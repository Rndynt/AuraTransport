You are a senior full-stack implementer. Scope: FIX CSO reservations page refresh/filtering + sidebar icon + table action visibility AND introduce a consistent Base Dialog/Popup system used across all modals. Stack: Node 20 + Express 5 + TS, React + TS (Vite), Drizzle + PostgreSQL. Keep code modular.

GOALS
1) CSO /cso page must NOT list trips until an outlet is selected.
2) When outlet is selected/changed, the ‚ÄúAvailable Trips‚Äù list MUST refresh and filter by that outlet‚Äôs stop (boarding allowed). If no matching trips for the date, show a clear empty state.
3) Hamburger (sidebar) icon must be visible and accessible.
4) Table action buttons in all masters (Stops, Outlets, Vehicles, etc.) must be clearly visible (not ‚Äúinvisible but clickable‚Äù).
5) All dialogs/popups in the app use a single, consistent Base Dialog:
   - Uniform header (title + optional description), scrollable content area, and sticky footer actions.
   - Responsive/mobile-friendly (full-height sheet on small screens), accessible (ARIA, focus trap), consistent sizes.

----------------------------------------------------------------
BACKEND ‚Äî Add a filtered ‚Äúavailable trips‚Äù endpoint
----------------------------------------------------------------
New endpoint:
- GET /api/cso/available-trips?date=YYYY-MM-DD&outletId=<uuid>
  - Validate `date` & `outletId`.
  - Resolve the outlet‚Äôs `stop_id`.
  - Find TRIPs on `service_date=date` where `trip_stop_times` contains a row with:
    * `stop_id = outlet.stop_id`
    * effective `boarding_allowed = true` (trip override if present else pattern default).
  - For each match, compute:
    * `departAtAtOutlet` = `trip_stop_times.depart_at` for that stop (or `null` if not set).
    * `finalArrivalAt` = last stop‚Äôs `arrive_at` (or `null` if not set).
  - Return:
    {
      tripId,
      patternCode,
      patternPath: "Jakarta ‚Üí Purwakarta ‚Üí Bandung",
      vehicle: { code, plate },
      capacity,
      status,
      departAtAtOutlet,   // ISO or null
      finalArrivalAt,     // ISO or null
      stopCount
    }
- Existing `/api/trips` remains for Masters; CSO must use this new endpoint.

Note: ‚Äúeffective boarding/alighting‚Äù = coalesce(trip_stop_times override, pattern_stops default, true).

----------------------------------------------------------------
FRONTEND ‚Äî CSO page behavior
----------------------------------------------------------------
1) Initial state:
   - Outlet = null ‚Üí Do NOT fetch trips. Show empty state:
     ‚ÄúSelect an outlet to see available trips for this date.‚Äù
   - Disable the ‚ÄúAvailable Trips‚Äù list until outlet chosen.

2) On outlet change:
   - Refetch via GET /api/cso/available-trips?date=&outletId=.
   - If empty, show card:
     ‚ÄúNo trips available for this outlet on <date>.‚Äù + hint ‚ÄúTry another date or outlet.‚Äù
   - If trips exist, render items with:
     - patternPath, formatted departAtAtOutlet (e.g., ‚Äú19.00‚Äù; or ‚ÄúTime not set‚Äù)
     - Capacity + vehicle code/plate + status badge
     - Primary Select button

3) When outlet changes after a trip was selected:
   - Clear current selection and dependent state (OD, seat map, passenger form, holds).
   - Re-enable the list after refetch.

4) Accessibility & UX:
   - Loading skeleton while fetching.
   - Error toast on API error.

----------------------------------------------------------------
SIDEBAR HAMBURGER ICON
----------------------------------------------------------------
- Ensure visible on light backgrounds:
  - Use SVG with `fill: currentColor` (bind to a CSS var, e.g., `--ui-foreground`).
  - Provide visible focus ring. Touch target ‚â• 40√ó40px. aria-label="Toggle sidebar".
- On mobile, keep a persistent top bar with the icon at left; toggles sidebar visibility.

----------------------------------------------------------------
MASTERS TABLE ACTIONS (visibility)
----------------------------------------------------------------
- Add an Actions column with clear buttons:
  - Edit (‚úé), Delete (üóë), optional View (üëÅ)
- Buttons must have:
  - Visible icon (not white-on-white), text label on md+ screens, tooltip on small screens.
  - Hover/focus styles and aria-labels.
- Ensure cell isn‚Äôt clipped: overflow: visible.

----------------------------------------------------------------
BASE DIALOG / POPUP SYSTEM (new, app-wide)
----------------------------------------------------------------
Create a reusable component used by ALL modals (Add Trip, Manage Schedule, Layout Editor, Pattern Stops, etc.).

Files
- frontend/src/shared/ui/BaseDialog.tsx
- frontend/src/shared/ui/dialog.css (or module CSS)
- Use a React Portal to #portal-root.

API
type BaseDialogProps = {
  open: boolean;
  onClose: () => void;
  title: string;
  description?: string;
  size?: 'sm' | 'md' | 'lg' | 'xl';   // default 'md'
  fullScreenOnMobile?: boolean;       // default true
  footer?: React.ReactNode;           // custom actions (primary/secondary)
  initialFocusRef?: React.RefObject<HTMLElement>;
  children: React.ReactNode;          // dialog content (scrollable area)
};

Behavior & Layout
- ARIA: role="dialog", aria-modal="true", aria-labelledby, aria-describedby.
- Focus trap inside dialog; Esc closes; clicking overlay closes (unless data-disable-overlay-close).
- Structure:
  - Header (sticky): title (h2) + optional description (subtext). Right side close (√ó) button.
  - Body (scrollable): overflow:auto; max-height: calc(100vh - var(--header) - var(--footer) - 2rem).
  - Footer (sticky): right-aligned primary/secondary actions; consistent spacing.
- Sizing:
  - Max width by size: sm=420px, md=640px, lg=800px, xl=960px.
  - On mobile (<640px) full-height sheet: width: 100vw; height: 100vh; header/footer sticky; body scrolls.
- Visual consistency:
  - Use CSS vars: --dialog-bg, --dialog-foreground, --dialog-radius, --shadow-lg.
  - Same paddings for header/footer across dialogs.
- Performance:
  - Unmount content on close to reset forms (opt-in via prop if needed).

Migration
- Replace all ad-hoc modals with BaseDialog. Ensure every dialog passes title, optional description, and footer actions placed in BaseDialog‚Äôs footer.
- Dialog content MUST be responsive; forms must use fluid width and allow vertical scrolling.
- Examples to migrate: Add Trip, Manage Schedule, Layout Create/Edit, Price Rule Create/Edit, Pattern Stops editor, etc.

Design Guidelines
- Primary action on the right, secondary on its left; destructive action danger style.
- Disable primary when form invalid; show inline validation messages.
- Titles concise; descriptions single-sentence.
- Consistent close button icon and keyboard support.

----------------------------------------------------------------
VALIDATION & EDGE CASES
----------------------------------------------------------------
- If an outlet has no mapped stop, show clear message in CSO: ‚ÄúThis outlet has no stop configured.‚Äù
- Filtering respects pickup-only rules (must be boardable at the outlet stop).
- If departAtAtOutlet is null, list but disable Select (or show warning)‚Äîchoose one and keep consistent.

----------------------------------------------------------------
TESTS
----------------------------------------------------------------
Backend (Vitest + Supertest):
- /api/cso/available-trips without outletId ‚Üí 400.
- With outletId whose stop not in any trip ‚Üí empty array.
- With valid outlet ‚Üí returns trips; departAtAtOutlet equals the outlet stop‚Äôs depart_at.

Frontend (RTL/Playwright):
- CSO page:
  - With no outlet selected ‚Üí shows ‚ÄúSelect an outlet‚Ä¶‚Äù empty state; no trips fetched.
  - Selecting outlet triggers fetch; changing outlet clears selection and re-fetches.
  - Empty state appears when API returns [].
- Sidebar:
  - Hamburger icon visible, keyboard-focusable, toggles sidebar.
- Tables:
  - Actions column visible with icons/labels; tooltips on small screens; keyboard accessible.
- BaseDialog:
  - Header/description/footer positions consistent across all modals.
  - Body scrolls when content tall; footer remains sticky.
  - Responsive: full-screen sheet on mobile; appropriate max-width on desktop.
  - Focus trap and Esc close work; overlay click behavior verified.

----------------------------------------------------------------
ACCEPTANCE CRITERIA
----------------------------------------------------------------
- CSO page shows no trips until outlet chosen; outlet change refetches list; empty-state appears when no data.
- Sidebar hamburger icon has proper contrast and focus ring; works on mobile/desktop.
- All master tables show a visible Actions column with accessible buttons.
- All modals in the app now use the BaseDialog, with consistent header/description/footer, sticky footer, scrollable body, responsive layout; no overlapping or inconsistent sizes.
- New /api/cso/available-trips is implemented and the CSO page uses it.
