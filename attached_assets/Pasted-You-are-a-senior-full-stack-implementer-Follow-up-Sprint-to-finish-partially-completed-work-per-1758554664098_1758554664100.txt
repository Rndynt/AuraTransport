You are a senior full-stack implementer. **Follow-up Sprint** to finish partially completed work per the latest review. Stack: Node 20 + Express 5 + TS, React + TS (Vite), Drizzle + PostgreSQL. Architecture stays modular.

FOCUS AREAS (only items not yet complete)
A) **Finish Table Actions visibility** on ALL master tables.
B) **Migrate every modal to the new BaseDialog** and remove legacy dialogs.
C) Keep CSO filtering behavior intact (no regressions).

------------------------------------------------------------
A) MASTER TABLE ACTIONS — IMPLEMENT ACROSS ALL SCREENS
------------------------------------------------------------
Apply the same UX you already did for **StopsManager** to the rest:

TARGETS
- OutletsManager
- VehiclesManager
- LayoutsManager
- TripPatternsManager
- TripsManager
- PriceRulesManager

REQUIREMENTS
- Add a dedicated **Actions** column with visible, accessible buttons:
  - **Edit** (✎), **Delete** (🗑), optional **Manage** actions:
    - TripPatterns: “Manage Stops” (opens Pattern Stops modal)
    - Trips: “Manage Schedule” (opens Scheduling modal)
  - Buttons have labels on md+ screens, tooltips on sm screens.
- Styling:
  - Icons use `currentColor`; ensure contrast against background.
  - Hover/focus styles + `aria-label` per button.
- Layout:
  - Ensure the Actions cell is never clipped (`overflow: visible` on cell/row).
  - Keep column width consistent across tables (use a shared class, e.g., `.col-actions`).
- Behavior:
  - Confirmations must use **BaseDialog** (see section B) with a short description of cascading effects for deletes.

------------------------------------------------------------
B) DIALOG MIGRATION — USE THE NEW BaseDialog EVERYWHERE
------------------------------------------------------------
Use the existing **BaseDialog** (portal, focus trap, ARIA) as the single modal primitive.

MIGRATE THESE DIALOGS/MODALS
- Add/Edit Stop
- Add/Edit Outlet
- Add/Edit Vehicle
- Add/Edit Layout + Layout preview
- Add/Edit Trip Pattern
- **Pattern Stops editor**
- Add Trip
- **Manage Schedule** (Trip Stop Times)
- Add/Edit Price Rule (date pickers)
- Delete Confirmation dialogs for all resources
- Any remaining “legacy” modals

UNIFORM PROPS & STRUCTURE
BaseDialog props (keep as already implemented):
```ts
type BaseDialogProps = {
  open: boolean;
  onClose: () => void;
  title: string;
  description?: string;
  size?: 'sm'|'md'|'lg'|'xl';   // default 'md'
  fullScreenOnMobile?: boolean; // default true
  footer?: React.ReactNode;     // put primary/secondary actions here
  initialFocusRef?: React.RefObject<HTMLElement>;
  children: React.ReactNode;    // scrollable content area
};
```

LAYOUT & A11Y (ENFORCE CONSISTENCY)
- Header (sticky): **title** + optional **description**, close (×) on the right.
- Body (scrollable): `overflow:auto; max-height: calc(100vh - header - footer - 2rem)`.
- Footer (sticky): right-aligned **primary** then **secondary**. Destructive buttons use danger style.
- Sizes: `sm=420px`, `md=640px`, `lg=800px`, `xl=960px`. On `<640px`, use **full-screen sheet**.
- Keyboard: `Esc` closes; tab trap; initial focus applied.
- Portal root: ensure a single `#portal-root` in `index.html` and all dialogs mount there.

CONTENT RULES
- Every dialog MUST set `title` and (when helpful) `description`.
- Place actions ONLY in `footer` to standardize positions.
- Body content responsive on mobile; long forms scroll within body, not the page.

REMOVE LEGACY
- Delete/retire old ad-hoc modal components.
- Fix all a11y console warnings related to modals.

SPECIAL CASES TO VERIFY AFTER MIGRATION
- **Manage Schedule** dialog remains scrollable with sticky footer; Save/Derive/Precompute buttons live in `footer`.
- **Layout Editor** dialog shows the seat preview responsively and scrolls within the body.
- **Price Rule** dialog uses date pickers; respects BaseDialog sizing.

------------------------------------------------------------
C) NO-REGRESSION CHECKS (CSO FILTERING)
------------------------------------------------------------
- CSO `/cso` still:
  - Shows **no trips** until outlet selected.
  - Refetches trips on outlet/date change using `GET /api/cso/available-trips`.
  - Shows empty-state card if no trips for selected outlet/date.
- Sidebar hamburger icon remains visible and accessible.

------------------------------------------------------------
TESTS
------------------------------------------------------------
Frontend (RTL/Playwright):
- Actions column visible with icons/labels on all master tables; tooltips on small screens; buttons keyboard-focusable.
- For each migrated dialog:
  - Header/description/footer present; body scrolls; footer sticky.
  - Full-screen behavior on narrow viewport; close with Esc and overlay.
  - Initial focus lands on the primary field/button.
- Manage Schedule dialog: content scrolls; Save/Derive/Precompute in footer; works on mobile width.
- CSO page: initial empty state; fetch after outlet selection; empty state when API returns [].

Backend (Supertest) — sanity:
- `/api/cso/available-trips` still returns 200 with proper filtering and fields.

------------------------------------------------------------
DELIVERABLES
------------------------------------------------------------
- All master tables have visible, accessible **Actions** columns.
- **All modals** use **BaseDialog**; legacy modal code removed.
- No a11y/console warnings from dialogs.
- CSO filtering behavior unchanged and tested.
- Update `features_checklist.md` under a new section **“Sprint – Dialog Migration & Table Actions”**:
  - [x] Actions column completed: Stops, Outlets, Vehicles, Layouts, Trip Patterns, Trips, Price Rules
  - [x] Dialog migration completed: list each dialog migrated
  - [x] No-regressions on CSO
  - Include brief verification notes and commit hash(es).
